% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FEISTY_main.R
\name{simulateFEISTY}
\alias{simulateFEISTY}
\title{Run FEISTY model simulations}
\usage{
simulateFEISTY (p = setupBasic(), 
                       tEnd = 500, tStep  = 1, times = seq(from=0, to=tEnd, by=tStep), 
                       yini = p$u0, USEdll = TRUE, Rmodel = derivativesFEISTYR, 
                       bCust = TRUE)
}
\arguments{
\item{p}{A complete parameter list. \cr 
The parameter of FEISTY setups can be one of the following: \code{\link{setupBasic}}, \code{\link{setupBasic2}}, \code{\link{setupVertical}}, and \code{\link{setupVertical2}}.
Moreover, users can modify these four prepared FEISTY setups or customize new setups before calling \code{simulateFEISTY}.}

\item{tEnd}{The end time for the simulation [year], i.e., simulation period of FEISTY, in years.}

\item{tStep}{The time step for ODE solving output [year]. Default is 1. Time series results are in every year.}

\item{times}{A sequence of time points for FEISTY simulations (ODEs solving), required by function \code{\link{ode}}. For general use, the parameter does not need to be defined, since it will be generated by `tEnd` and `tStep` automatically. \cr
If `NA`, the function returns only the derivatives (one time step running) by the derivative function, which is the \code{\link{derivativesFEISTYR}} in R or the same function in FORTRAN.}

\item{yini}{A vector containing initial biomass values of all state variables (resources and all size classes). The default is imported from the setup parameter list, `p$u0`. 
If input the whole output list of a simulation (e.g., \code{yini=sim}), the biomass values of all state variables of the last time step (\code{yini=sim$u[sim$nTime,]}) will be applied to the initial values.
It can be used for successive simulations based on previous simulations.}

\item{USEdll}{Logical flag, determining whether the ODEs are solved in FORTRAN (`TRUE`) or R (`FALSE`). \cr
The \link{deSolve} package is required for both methods. Default is TRUE, \code{USEdll=FALSE} is useful in debugging or model development.
`bCust` flag input is ineffective when \code{USEdll=FALSE}.}

\item{Rmodel}{The R function for computing derivatives, defaults to \code{\link{derivativesFEISTYR}}. Generally, it should not be changed, unless users modify the model profoundly.}

\item{bCust}{Logical flag, indicates whether to use fixed setups (FALSE) or customized setups (TRUE). \cr 
Default is TRUE, which means the core FEISTY parameters generated in R are transmitted to Fortran, and the ode solving is also done by compiled language. 
\code{bCust=FALSE} is useful in debugging and model development, e,g., comparing R and FORTRAN results.
\code{bCust} flag has a lower priority than \code{USEdll} flag. \code{bCust} flag input is ineffective when \code{USEdll} flag is FALSE.}
}
\value{
A list containing the simulation results:
\itemize{
\item u: a matrix of biomass of each state variable (column) at each time point (row), including resources and all size classes of functional types.
\item R: a matrix of biomass of each resource (column) at each time point (row).
\item B: a matrix of biomass of each size class (column) at each time point (row).
\item t: a vector containing all the simulation time points. From 0 to `tEnd`.
\item nTime: the number of time points.
\item USEdll: from parameter input.
\item p: the parameter list used in the simulation, the same as the input one.
\item f: a matrix containing feeding levels [-] of all size classes of functional types over each time point. Resources not included.
\item mortpred: a matrix containing a vector containing predation mortality rate [1/year] of all resources and all size classes of functional types over each time point. Resources not included.
\item g: a matrix containing the net growth rate [1/year] of all size classes of functional types over each time point. Resources not included.
\item Repro: a matrix containing the energy used for reproduction of all size classes of functional types over each time point, rate [g/m2/year]. Resources not included.
\item Fin: a matrix containing the biomass flux into each size class over each time point [g/m2/year]. Resources not included.
\item Fout: a matrix containing the biomass flux out of each size class over each time point [g/m2/year]. Resources not included.
\item totMort: a matrix containing the total mortality [g/m2/year] of each functional type over each time point, 
which includes predation mortality, background mortality, and fishing mortality.
\item totGrazing: a matrix containing the total grazing [g/m2/year] of each functional type over each time point, Cmax * f (maximum consumption rate * feeding level)
To be simply, the food intake before assimilation.
\item totLoss: a matrix containing all biomass loss [g/m2/year] of each functional type over each time point, including unassimilated food and metabolism.
The losses are released to the environment.
\item totRepro: a matrix containing the total energy used for reproduction [g/m2] of each functional type over each time point.
\item totRecruit: a matrix containing the total recruitment [g/m2] of each functional type over each time point. 
TotRecruit = TotRepro * epsRepro (reproduction efficiency)
\item totBiomass: a matrix containing the total biomass [g/m2] of each functional type over each time point.
\item `SSBAMean`, `SSBGMean`, `SSBMin`, `SSBMax`, and `SSB` can be found in \code{\link{calcSSB}}. \cr
`yieldAMean`, `yieldGMean`, `yieldMin`, `yieldMax`, and `yield` can be found in \code{\link{calcYield}}.
}
}
\description{
\code{simulateFEISTY} runs simulations of the FEISTY model to resolve the dynamics of marine resources and fish populations over a specified time frame. \cr
It provides options for integrating ordinary differential equations in Fortran or R for four prepared setups (\code{setupBasic}, \code{setupBasic2}, \code{setupVertical}, and \code{setupVertical2}).
}
\details{
The function runs the FEISTY model simulation over the specified time frame. \cr
The simulation supports published FEISTY setups and their revised versions:
\code{\link{setupBasic}}, \code{\link{setupBasic2}}, \code{\link{setupVertical}}, and \code{\link{setupVertical2}}, and customized setups by modelers. \cr
The simulation can be conducted by a FORTRAN-based approach or an R-based approach. Both methods rely on the \link{deSolve} package for ODE solving. 
For efficiency, FORTRAN dll should be used. For model development, the R-version is preferred.
Simulations based on customized setups can only be done with the FORTRAN-based approach.
}
\examples{

# run setupBasic with default parameter settings
sim <- simulateFEISTY()
plotSimulation(sim)

# run FEISTY simulation based on setupVertical2
# prepare a parameter list
p_V <- setupVertical2(szprod = 100, lzprod = 120, bprodin = 200, depth = 1000)
# run the simulation by R
sim_Vertical_R <- simulateFEISTY(p = p_V, USEdll = FALSE)
plotSimulation(sim_Vertical_R)

# run FEISTY simulation based on setupBasic2 by Fortran
sim_Basic2_F <- simulateFEISTY(p = setupBasic2(szprod = 90, lzprod = 100, bprod = 15, 
                                               depth = 500, Tp = 11, Tb = 9, 
                                               nStages=9, etaMature=0.25, F=0, etaF=0.05),
                                tEnd = 1000, tStep = 1, USEdll = TRUE)
plotSimulation(sim_Basic2_F)

# -------------------------------------------------------------------------------

# run FEISTY simulation based on a customized set up. 
# The parameter values are provided solely for illustrative purposes.

# Initialize the parameter list.
p_cust <- paramInit(szprod=100, lzprod=100, bprod=50, Tp=10,Tb=10,etaMature=0.25, depth=500,
mMedium = 0.5, mLarge = 250)

# add three resources
p_cust <- paramAddResource(p_cust,
          names= c("smallZoo", "largeZoo", "benthos"),
          K    = c(100, 120, 80),
          r    = c(1, 1, 1),
          mLower = c(2e-06,0.001, 0.5e-03),
          mUpper = c(0.001, 0.5, 125),
          mc   = c(2e-06*sqrt(500), 0.001*sqrt(500), 0.5e-03*sqrt(250000)))
          
# add two functional types of fish: small pelagic fish and demersal fish           
p_cust <- paramAddGroup(p_cust, mMin=0.001, mMax=250, mMature=NA, 
                        mortF=0,      nStages=6, name="smallPel")
p_cust <- paramAddGroup(p_cust, mMin=0.001, mMax=125000, mMature=NA, 
                        mortF=0, nStages=9, name="demersals")
                        
# add physiological parameters for two functional types
p_cust <- paramAddPhysiology(p_cust, 
          ac = 20, bc = -0.25,       
          am = 0.011*365, bm = -0.175,      
          ae = 70, be = -0.2,        
          epsRepro = 0.01, 
          epsAssim = 0.7)

# Add fishing mortality on demersal fish only. The baseline fishing mortality is 0.2/year.
p_cust <- setFishing(p_cust, Fmax=0.2, etaF=0.05,groupidx=c(2))

# Add size preference
p_cust$theta <- paramSizepref(p = p_cust,   
                        beta = 400,
                        sigma = 1.3, 
                        type = 1)

# Add temperature effect
p_cust=paramTeffect(p=p_cust, Tref=10, Q10=1.88, Q10m=2.35, pelgroupidx=c(1), demgroupidx=c(2))
# Turn on the effective temperature effects on large demersals.
p_cust$bET=TRUE

# run the simulation for 500 years. 
sim_cust <- simulateFEISTY(bCust = TRUE, p = p_cust, tEnd = 500)

}
\references{
Petrik, C. M., Stock, C. A., Andersen, K. H., van Denderen, P. D., & Watson, J. R. (2019). Bottom-up drivers of global patterns of demersal, forage, and pelagic fishes. Progress in oceanography, 176, 102124.

van Denderen, P. D., Petrik, C. M., Stock, C. A., & Andersen, K. H. (2021). Emergent global biogeography of marine fish food webs. Global Ecology and Biogeography, 30(9), 1822-1834.

de Roos, A. M., Schellekens, T., Van Kooten, T., Van De Wolfshaar, K., Claessen, D., & Persson, L. (2008). Simplifying a physiologically structured population model to a stage-structured biomass model. Theoretical population biology, 73(1), 47-62.

Soetaert, K., Petzoldt, T., & Setzer, R. W. (2010). Solving differential equations in R: package deSolve. Journal of statistical software, 33, 1-25.
}
\seealso{
\code{\link{setupBasic}} The setup following Petrik et al. (2019) \cr
\code{\link{setupBasic2}} A revised setup based on `setupBasic` \cr
\code{\link{setupVertical}} The setup following van Denderen et al. (2021) \cr
\code{\link{setupVertical2}} A revised setup based on `setupVertical` \cr

\code{\link{calcSSB}} Spawning stock biomass calculation \cr
\code{\link{calcYield}} Yield calculation

\code{\link{derivativesFEISTYR}} The derivative function of state variables in FEISTY model

\code{\link{webFEISTY}} A shiny interface for visualizing FEISTY model results

\code{\link{plotSimulation}} Plot simulation results including rates, biomass, and SSB data
}
\author{
AAAA, EEEE, DDDD
}
